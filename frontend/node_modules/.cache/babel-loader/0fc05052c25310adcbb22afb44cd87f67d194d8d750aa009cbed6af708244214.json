{"ast":null,"code":"var _jsxFileName = \"/home/xs436-anikum/Desktop/libsis/frontend/src/hooks/AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [role, setRole] = useState(localStorage.getItem(\"role\"));\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const navigate = useNavigate();\n  const Loginction = async (gmail, password) => {\n    try {\n      let response = await fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          gmail,\n          password\n        })\n      });\n      const res = await response.json();\n      if (res.gmail && res.password) {\n        setRole(res.role);\n        setToken(res.token);\n        localStorage.setItem(\"token\", res.Token);\n        localStorage.setItem(\"role\", res.Role);\n        navigate(\"/dashboard\");\n        return;\n      }\n      throw new Error(res.message);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const logOut = () => {\n    setRole(null);\n    setToken(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      role,\n      Login,\n      logOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"fwRVBlgUSedL1A6tIPLIyrXNcUo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useContext","createContext","useState","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","role","setRole","localStorage","getItem","token","setToken","navigate","Loginction","gmail","password","response","fetch","method","headers","body","JSON","stringify","res","json","setItem","Token","Role","Error","message","err","console","error","logOut","removeItem","Provider","value","Login","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/xs436-anikum/Desktop/libsis/frontend/src/hooks/AuthProvider.jsx"],"sourcesContent":["import { useContext, createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [role, setRole] = useState(localStorage.getItem(\"role\"));\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const navigate = useNavigate();\n  const Loginction= async (gmail, password) => {\n    try {\n      let response = await fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ gmail, password }),\n      });\n      const res = await response.json();\n      if (res.gmail && res.password) {\n        setRole(res.role);\n        setToken(res.token);\n        localStorage.setItem(\"token\", res.Token);\n        localStorage.setItem(\"role\",res.Role)\n        navigate(\"/dashboard\");\n        return;\n      }\n      throw new Error(res.message);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const logOut = () => {\n    setRole(null);\n    setToken(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem( \"role\" );\n    navigate(\"/login\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, role, Login, logOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n\n};\n\nexport default AuthProvider;\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC9D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAMG,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,UAAU,GAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MACF,MAAMQ,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACjC,IAAID,GAAG,CAACT,KAAK,IAAIS,GAAG,CAACR,QAAQ,EAAE;QAC7BR,OAAO,CAACgB,GAAG,CAACjB,IAAI,CAAC;QACjBK,QAAQ,CAACY,GAAG,CAACb,KAAK,CAAC;QACnBF,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEF,GAAG,CAACG,KAAK,CAAC;QACxClB,YAAY,CAACiB,OAAO,CAAC,MAAM,EAACF,GAAG,CAACI,IAAI,CAAC;QACrCf,QAAQ,CAAC,YAAY,CAAC;QACtB;MACF;MACA,MAAM,IAAIgB,KAAK,CAACL,GAAG,CAACM,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnB1B,OAAO,CAAC,IAAI,CAAC;IACbI,QAAQ,CAAC,EAAE,CAAC;IACZH,YAAY,CAAC0B,UAAU,CAAC,OAAO,CAAC;IAChC1B,YAAY,CAAC0B,UAAU,CAAE,MAAO,CAAC;IACjCtB,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE1B,KAAK;MAAEJ,IAAI;MAAE+B,KAAK;MAAEJ;IAAO,CAAE;IAAA7B,QAAA,EACzDA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAG3B,CAAC;AAACpC,EAAA,CAxCIF,YAAY;EAAA,QAGCJ,WAAW;AAAA;AAAA2C,EAAA,GAHxBvC,YAAY;AA0ClB,eAAeA,YAAY;AAE3B,OAAO,MAAMwC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOhD,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC;AAAC0C,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}