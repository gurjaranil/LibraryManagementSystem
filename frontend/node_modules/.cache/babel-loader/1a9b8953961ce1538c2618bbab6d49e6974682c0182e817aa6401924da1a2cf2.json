{"ast":null,"code":"var _jsxFileName = \"/home/xs436-anikum/Desktop/libsis/frontend/src/hooks/AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\n// import { LoginCall, LogoutCall } from \"../ApiService/ApiService\";\nimport { json } from \"react-router-dom\";\nimport { LoginCall, LogoutCall } from \"./apicall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState({});\n  const [token, setToken] = useState({});\n  const [Role, setRole] = useState({});\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loginErr, setLoginErr] = useState(\"\");\n  function loginAction(email, password) {}\n  useEffect(() => {\n    const isAuth = Boolean(localStorage.getItem(\"isLogin\"));\n    const user = localStorage.getItem(\"User\");\n    const Token = localStorage.getItem(\"Token\");\n    const Role = localStorage.getItem(\"Role\");\n    setIsAuthenticated(isAuth);\n    setUser(user);\n    setToken(Token);\n    setRole(Role);\n  }, []);\n  function Logout() {\n    return LogoutCall().then(res => {\n      setIsAuthenticated(false);\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem(\"isLogin\");\n      localStorage.removeItem(\"User\");\n      localStorage.removeItem(\"Token\");\n      localStorage.removeItem(\"Role\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      loginAction,\n      Logout,\n      user,\n      token,\n      Role,\n      loginErr\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"CCVygqgVnGGsri3i5zHGeHDMhlQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","json","LoginCall","LogoutCall","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","Role","setRole","isAuthenticated","setIsAuthenticated","loginErr","setLoginErr","loginAction","email","password","isAuth","Boolean","localStorage","getItem","Token","Logout","then","res","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/xs436-anikum/Desktop/libsis/frontend/src/hooks/AuthProvider.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\n// import { LoginCall, LogoutCall } from \"../ApiService/ApiService\";\nimport { json } from \"react-router-dom\";\nimport { LoginCall, LogoutCall } from \"./apicall\";\n\nexport const AuthContext = createContext()\n\nexport const useAuth =\n    () => useContext(AuthContext)\n\nexport default function AuthProvider({ children }) {\n    const [user, setUser] = useState({})\n    const [token, setToken] = useState({})\n    const [Role, setRole] = useState({})\n\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\n    const [loginErr, setLoginErr] = useState(\"\")\n\n    function loginAction(email, password) {\n      \n    }\n\n    useEffect(() => {\n        const isAuth =Boolean(localStorage.getItem(\"isLogin\"))\n        const user = localStorage.getItem(\"User\")\n        const Token = localStorage.getItem(\"Token\")\n        const Role = localStorage.getItem(\"Role\")\n\n        setIsAuthenticated(isAuth)\n        setUser(user)\n        setToken(Token)\n        setRole(Role)\n\n    }, [])\n\n\n\n    function Logout() {\n      \n\n        return(LogoutCall().then((res)=>{\n            setIsAuthenticated(false);\n            setUser(null)\n            setToken(null)\n            localStorage.removeItem(\"isLogin\");\n            localStorage.removeItem(\"User\");\n            localStorage.removeItem(\"Token\");\n            localStorage.removeItem(\"Role\");\n\n        }))\n\n    }\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, loginAction, Logout, user,token,Role, loginErr }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE;AACA,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMU,OAAO,GAChBA,CAAA;EAAAC,EAAA;EAAA,OAAMV,UAAU,CAACQ,WAAW,CAAC;AAAA;AAAAE,EAAA,CADpBD,OAAO;AAGpB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASsB,WAAWA,CAACC,KAAK,EAAEC,QAAQ,EAAE,CAEtC;EAEAzB,SAAS,CAAC,MAAM;IACZ,MAAM0B,MAAM,GAAEC,OAAO,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtD,MAAMhB,IAAI,GAAGe,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMZ,IAAI,GAAGW,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEzCT,kBAAkB,CAACM,MAAM,CAAC;IAC1BZ,OAAO,CAACD,IAAI,CAAC;IACbG,QAAQ,CAACc,KAAK,CAAC;IACfZ,OAAO,CAACD,IAAI,CAAC;EAEjB,CAAC,EAAE,EAAE,CAAC;EAIN,SAASc,MAAMA,CAAA,EAAG;IAGd,OAAO3B,UAAU,CAAC,CAAC,CAAC4B,IAAI,CAAEC,GAAG,IAAG;MAC5Bb,kBAAkB,CAAC,KAAK,CAAC;MACzBN,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,IAAI,CAAC;MACdY,YAAY,CAACM,UAAU,CAAC,SAAS,CAAC;MAClCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MAC/BN,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;MAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IAEnC,CAAC,CAAC;EAEN;EACA,oBACI5B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEjB,eAAe;MAAEI,WAAW;MAAEQ,MAAM;MAAElB,IAAI;MAACE,KAAK;MAACE,IAAI;MAAEI;IAAS,CAAE;IAAAV,QAAA,EAC5FA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC5B,GAAA,CA/CuBF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}