{"ast":null,"code":"var _jsxFileName = \"/home/xs436-anikum/Desktop/libsis/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport Home from \"./views/Home\";\nimport Liblist from \"./views/Liblist\";\nimport Requestaccess from \"./views/Requestaccess\";\nimport Libcreate from \"./views/Libcreate\";\nimport Login from \"./views/Login\";\nimport Header from \"./components/Header\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [libname, setLibName] = useState(\"\");\n  const [ownername, setOwnerName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [contactnumber, setContactNumber] = useState(\"\");\n  const [libid, setLibId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost:8080/library\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          LibName: libname,\n          OwnerName: ownername,\n          Gmail: gmail,\n          ContactNumber: contactnumber,\n          LibId: libid,\n          Password: password\n        })\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setLibName(\"\");\n        setGmail(\"\");\n        setOwnerName(\"\");\n        setContactNumber(\"\");\n        setLibId(\"\");\n        setPassword(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Libcreate, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HwleXDrTd/4k7qzUjun1eSAcYaQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Home","Liblist","Requestaccess","Libcreate","Login","Header","useState","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","App","_s","libname","setLibName","ownername","setOwnerName","gmail","setGmail","contactnumber","setContactNumber","libid","setLibId","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","LibName","OwnerName","Gmail","ContactNumber","LibId","Password","resJson","json","status","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/xs436-anikum/Desktop/libsis/frontend/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./views/Home\";\nimport Liblist from \"./views/Liblist\";\nimport Requestaccess from \"./views/Requestaccess\";\nimport Libcreate from \"./views/Libcreate\";\nimport Login from \"./views/Login\";\nimport Header from \"./components/Header\";\nimport { useState } from \"react\";\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [libname, setLibName] = useState(\"\");\n  const [ownername, setOwnerName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [contactnumber, setContactNumber] = useState(\"\");\n  const [libid, setLibId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost:8080/library\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          LibName: libname,\n          OwnerName:ownername,\n          Gmail: gmail,\n          ContactNumber:contactnumber,\n          LibId:libid,\n          Password: password,\n        }),\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setLibName(\"\");\n        setGmail(\"\");\n        setOwnerName(\"\")\n        setContactNumber(\"\")\n        setLibId(\"\")\n        setPassword(\"\")\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <Libcreate />\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE1C,IAAIuB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEvB,OAAO;UAChBwB,SAAS,EAACtB,SAAS;UACnBuB,KAAK,EAAErB,KAAK;UACZsB,aAAa,EAACpB,aAAa;UAC3BqB,KAAK,EAACnB,KAAK;UACXoB,QAAQ,EAAElB;QACZ,CAAC;MACH,CAAC,CAAC;MACF,IAAImB,OAAO,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;MAC9B,IAAIb,GAAG,CAACc,MAAM,KAAK,GAAG,EAAE;QACtB9B,UAAU,CAAC,EAAE,CAAC;QACdI,QAAQ,CAAC,EAAE,CAAC;QACZF,YAAY,CAAC,EAAE,CAAC;QAChBI,gBAAgB,CAAC,EAAE,CAAC;QACpBE,QAAQ,CAAC,EAAE,CAAC;QACZE,WAAW,CAAC,EAAE,CAAC;QACfE,UAAU,CAAC,2BAA2B,CAAC;MACzC,CAAC,MAAM;QACLA,UAAU,CAAC,oBAAoB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EACD,oBACEnC,OAAA,CAACT,SAAS;IAAA+C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEjB;AAACvC,EAAA,CA1CQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}