{"ast":null,"code":"import axios from \"axios\";\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:9999/'\n});\nexport const LoginCall = (email, password) => apiClient.post(`/login`, JSON.stringify({\n  email: email,\n  password: password\n}));\n_c = LoginCall;\nexport const LogoutCall = () => apiClient.get(`/logout`);\n_c2 = LogoutCall;\nexport const RegisterLibraryCall = (name, email, contact, password, libname) => apiClient.post(`Register/Library`, JSON.stringify({\n  name: name,\n  email: email,\n  contact_number: Number(contact),\n  password: password,\n  lib_name: libname\n}));\n// export const SignupReaderCall=(name,email,contact,password,lib)=> apiClient.post(`signup/${lib}`,JSON.stringify({\n//   name:name,\n//   email:email,\n//   contact_number:Number(contact),\n//   password:password\n\n//   }))\n_c3 = RegisterLibraryCall;\nexport const GetLibraryCall = () => apiClient.get(`/library`);\n_c4 = GetLibraryCall;\nexport const GetUserCall = Role => apiClient.get(`/${Role}/user`);\n// export const RemoveAdminCall =(Role)=>apiClient.delete(`/${Role}/admin`);\n_c5 = GetUserCall;\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('Token'); // Assuming you store the token in localStorage\n  if (token) {\n    config.headers.Authorization = `${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// export const AddAdminCall=(name,email,contact,password,role)=> apiClient.post(`/${role}/admin`,JSON.stringify({\n//   name:name,\n//   email:email,\n//   contact_number:Number(contact),\n//   password:password\n//   }))\n\nexport const AddBookCall = (isbn, title, authors, publisher, version, total, role) => apiClient.post(`/${role}/book`, JSON.stringify({\n  isbn: Number(isbn),\n  Title: title,\n  Authors: authors,\n  Publisher: publisher,\n  Version: version,\n  TotalCopies: Number(total)\n}));\n_c6 = AddBookCall;\nexport const GetBookCall = Role => apiClient.get(`/${Role}/book`);\n_c7 = GetBookCall;\nexport const RequestBook = book_id => apiClient.post(`/reader/request`, JSON.stringify({\n  book\n}));\n//   export const GetBookByIdCall =(Role,id)=>apiClient.get(`/${Role}/book/${id}`);\n_c8 = RequestBook;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"LoginCall\");\n$RefreshReg$(_c2, \"LogoutCall\");\n$RefreshReg$(_c3, \"RegisterLibraryCall\");\n$RefreshReg$(_c4, \"GetLibraryCall\");\n$RefreshReg$(_c5, \"GetUserCall\");\n$RefreshReg$(_c6, \"AddBookCall\");\n$RefreshReg$(_c7, \"GetBookCall\");\n$RefreshReg$(_c8, \"RequestBook\");","map":{"version":3,"names":["axios","apiClient","create","baseURL","LoginCall","email","password","post","JSON","stringify","_c","LogoutCall","get","_c2","RegisterLibraryCall","name","contact","libname","contact_number","Number","lib_name","_c3","GetLibraryCall","_c4","GetUserCall","Role","_c5","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","AddBookCall","isbn","title","authors","publisher","version","total","role","Title","Authors","Publisher","Version","TotalCopies","_c6","GetBookCall","_c7","RequestBook","book_id","book","_c8","$RefreshReg$"],"sources":["/home/xs436-anikum/Desktop/libsis/frontend/src/hooks/apicall.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst apiClient=axios.create(\n  {\n      baseURL:'http://localhost:9999/'\n  }\n)\nexport const LoginCall=(email,password)=> apiClient.post(`/login`,JSON.stringify({\n  email: email,\n  password: password}),\n)\nexport const LogoutCall=()=> apiClient.get(`/logout`)\n\n\n\n\n\n\n\n\nexport const RegisterLibraryCall=(name,email,contact,password,libname)=> apiClient.post(`Register/Library`,JSON.stringify({\nname:name,\nemail:email,\ncontact_number:Number(contact),\npassword:password,\nlib_name:libname\n}))\n// export const SignupReaderCall=(name,email,contact,password,lib)=> apiClient.post(`signup/${lib}`,JSON.stringify({\n//   name:name,\n//   email:email,\n//   contact_number:Number(contact),\n//   password:password\n\n//   }))\nexport const GetLibraryCall=()=> apiClient.get(`/library`)\n\nexport const GetUserCall =(Role)=>apiClient.get(`/${Role}/user`);\n// export const RemoveAdminCall =(Role)=>apiClient.delete(`/${Role}/admin`);\n\n\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('Token'); // Assuming you store the token in localStorage\n    if (token) {\n      config.headers.Authorization = `${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// export const AddAdminCall=(name,email,contact,password,role)=> apiClient.post(`/${role}/admin`,JSON.stringify({\n//   name:name,\n//   email:email,\n//   contact_number:Number(contact),\n//   password:password\n//   }))\n\n \n  export const AddBookCall=(isbn,title,authors,publisher,version,total,role)=> apiClient.post(`/${role}/book`,JSON.stringify({\n    isbn:Number(isbn),\n    Title:title,\n    Authors:authors,\n    Publisher:publisher,\n    Version:version,\n    TotalCopies:Number(total)\n    }))\n    \n  \n  export const GetBookCall =(Role)=>apiClient.get(`/${Role}/book`);\n  export const RequestBook =(book_id)=>apiClient.post(`/reader/request` ,JSON.stringify(\n    {\n      book\n    }\n  ));\n//   export const GetBookByIdCall =(Role,id)=>apiClient.get(`/${Role}/book/${id}`);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}