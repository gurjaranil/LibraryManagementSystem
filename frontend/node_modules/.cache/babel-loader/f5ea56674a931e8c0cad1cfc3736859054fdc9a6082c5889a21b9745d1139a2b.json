{"ast":null,"code":"var _jsxFileName = \"/home/xs436-anikum/Desktop/libsis/frontend/src/views/Login.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"./AuthProvider\";\nimport \"./login.css\";\nimport React, { useState } from \"react\";\nimport AuthProvider, { useAuth } from \"../hooks/AuthProvider\";\n// import { LoginCall } from \"../hooks/apicall\";\n// import { useAuth } from \"../hooks/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  //   const [input, setInput] = useState({\n  //     gmail: \"\",\n  //     password: \"\",\n  //   });\n\n  // const authContext = useAuth();\n  // const navigate=useNavigate()\n\n  // const HandleLogin= async (e)=>{\n  //     e.preventDefault();\n  //     try {   \n  //         console.log(input)\n  //         const res = await authContext.Login(input.gmail,input.password)\n  //         navigate(\"/dashboard\")\n  //         console.log(res)\n  //         }catch(e) {\n  //         console.log(e)\n  //         }\n  // };\n\n  //   // const  handleChange = (e) => {\n  //   //   setInput((prevInput) => ({ ...prevInput, [e.target.name]: e.target.value }));\n  //   // };\n\n  //   const handleInput = (e) => {\n  //     const { name, value } = e.target;\n  //     setInput((prev) => ({\n  //       ...prev,\n  //       [name]: value,\n  //     }));\n  //   };\n\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          gmail: gmail,\n          password: password\n        })\n      });\n      console.log(res);\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setGmail(\"\");\n        setPassword(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_area\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: gmail,\n          onChange: e => setGmail(e.target.value),\n          className: \"text_input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_area\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"text_input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"LOGIN\",\n        className: \"btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"W0SN8xlm/68CsEiVdcVYoXT91hg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useNavigate","React","useState","AuthProvider","useAuth","jsxDEV","_jsxDEV","Login","_s","gmail","setGmail","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","console","log","resJson","json","status","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/xs436-anikum/Desktop/libsis/frontend/src/views/Login.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"./AuthProvider\";\nimport \"./login.css\";\nimport React, { useState } from \"react\";\nimport AuthProvider, { useAuth } from \"../hooks/AuthProvider\";\n// import { LoginCall } from \"../hooks/apicall\";\n// import { useAuth } from \"../hooks/AuthProvider\";\n\nconst Login = () => {\n//   const [input, setInput] = useState({\n//     gmail: \"\",\n//     password: \"\",\n//   });\n\n// const authContext = useAuth();\n// const navigate=useNavigate()\n\n// const HandleLogin= async (e)=>{\n//     e.preventDefault();\n//     try {   \n//         console.log(input)\n//         const res = await authContext.Login(input.gmail,input.password)\n//         navigate(\"/dashboard\")\n//         console.log(res)\n//         }catch(e) {\n//         console.log(e)\n//         }\n// };\n\n  \n\n//   // const  handleChange = (e) => {\n//   //   setInput((prevInput) => ({ ...prevInput, [e.target.name]: e.target.value }));\n//   // };\n\n\n\n\n//   const handleInput = (e) => {\n//     const { name, value } = e.target;\n//     setInput((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n  \n  const [gmail,setGmail]=useState(\"\");\n  const [password, setPassword]=useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          gmail: gmail,\n          password: password,\n        }),\n      });\n      console.log(res)\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setGmail(\"\");\n        setPassword(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <div className=\"login\">\n      <h4>Login</h4>\n      <form onSubmit={handleSubmit}>\n        <div className=\"text_area\">\n        {/* <label htmlFor=\"user-email\">Email:</label> */}\n        <input\n          type=\"email\"\n          value={gmail}\n          onChange={(e) => setGmail(e.target.value)}\n          className=\"text_input\"\n        />\n        </div>\n        <div className=\"text_area\">\n        {/* <label htmlFor=\"password\">Password:</label> */}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"text_input\"\n        />\n        </div>\n        <input\n          type=\"submit\"\n          value=\"LOGIN\"\n          className=\"btn\"\n\n        />\n        {/* {error && <p className=\"err-msg\">{error}</p>}\n        <p>\n          {<br/>}\n          Don't have an account?{\" \"}\n          <Link className=\"link\" to=\"/requestaccess\">\n            Fill The Request Access Form\n          </Link>\n        </p> */}\n\n\n      </form>\n\n    </div>\n  )\n\n}\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}